// Uploader object:
// responsibilities - 
// 1. to handle incoming uploads
// 2. add upload to bulk upload container
// 3. update progress boxes
// 4. switch containers to complete or display errors
 
var Uploader = {
	queue: new Array(),
	queue_file_size: 0,
	completed: new Array(),
	cfdr: '',
	upload_el: '',
	istat : null,
	aupload  : null,
	bstat: null,
	init: function() {
		this.istat = $("div#inline-upload-status");
		this.cfdr = $("#current_folder_name").val();
		this.upload_el = $("ol#upload-files-list");
		this.bstat = $("div.bulk-upload-info");
		this.aupload = $("#advanced-upload-modal");
		this.file_info = $("#bulk-upload-status div.bulk-upload-info div.files-info");
		this.file_list =  $("#upload-files-list");
	},
	reset_status: function() {
		var loader = Uploader;
		this.istat.find("div.status").html('');
		this.istat.find("a.view-details").html("");
		this.istat.find("span.file-desc").html("");
		this.istat.find("div.icon").empty().append(Sprite.html('web','s_web_syncing', {}));
		
		this.aupload.find("#upload-desc").hide();
		this.aupload.find("ol#upload-files-list").show();
		this.aupload.find("div#bulk-upload-status").show();
		this.aupload.find("#upload-start-buttons").hide();
		this.aupload.find("#upload-running-buttons").show();
		
		this.aupload.find("div#bulk-upload-status").removeClass("complete");
		
	},
	updateBulkFileInfo: function() {
		var loader = Uploader;
		var info = loader.file_info;
		var size = 0;
		var info = $("#bulk-upload-status div.bulk-upload-info div.files-info");
		info.data("count",$("#upload-files-list").find('li').length);
		info.data("complete",$("#upload-files-list").find('li.complete').length);
		var files = $("#upload-files-list").find("li");
		var completed = $("#upload-files-list li.complete");
		
		console.info($("#upload-files-list").find("li").length);
		
		
		info.data("count",files.length);
		info.data("complete",completed.length);
		
		files.each(function(index) {
			size += parseInt($(this).data("size"));
		});
		info.data("filesize",size);
		
	},
	buildData: function(data) {
		var loader = Uploader;
		var info = loader.file_info;
		var i = 0;
		var params = {};
		$.each(data.files, function(index, file)  {
			i = $("#upload-files-list").find('li').length;
			// jsRender template
			params = {file: file, 
					  dest: $("#current_folder_name").val(), 
					  index:i, icon:Sprite.ext_icon(file.name)};
			loader.upload_el.append($("#upload-tmpl").render(params));
			
			data.context = $("#upload-files-list li#upload_" + i);
			data.context.data('IE',file.size);
			data.context.find(".small-x-button").click(loader.cancelHandler);

			info.data("count", parseInt(info.data("count")) + 1);
			info.data("filesize", parseInt(info.data("filesize")) + file.size);
		});
		var file_size = filesize(parseInt(info.data("filesize")));
		var file_count = info.data("count") + " file" + ((info.data("count") > 1) ? "s" : "");
		info.find("span.num-files").html(file_count);
		info.find("span.size").html( file_size);
		if(parseInt(info.data("count")) > 6) {
			loader.file_list.addClass("scroll");
		}
		//istat.find("div.icon").empty().append(Sprite.html('web','s_web_syncing', {}));
		loader.istat.find("div.icon").html(Sprite.html('web','s_web_syncing', {}) );
		if(!Modal.isVisible()) {
			istat.show();
		}
	},
	cancelHandler: function (e) {
		var loader = Uploader;
		var parent = $(this).closest("li");
		var info = loader.file_info;
		e.preventDefault();
				
		var template = $(e.currentTarget).closest('.template-upload'),
        data = template.data('data') || {};
        if (!data.jqXHR) {
        	data.errorThrown = 'abort';
            this._trigger('fail', e, data);
        } else {
            data.jqXHR.abort();
        }
		info.data("count", parseInt(info.data("count")) - 1);
		console.info(parent.data("size"));
		info.data("filesize", parseInt(info.data("filesize")) -  parseInt(parent.data("size")));
		
		var file_size = filesize(parseInt(info.data("filesize")));
		var file_count = info.data("count") + " file" + ((info.data("count") > 1) ? "s" : "");
		info.find("span.num-files").html(file_count);
		info.find("span.size").html( file_size);
		
		parent.addClass("cancelled");
		parent.find("div.dest-col").html("Cancelled");
		parent.find("div.status-col").empty().append(Sprite.html('web','s_web_cancelsync', {}));
		parent.find("div.upload-progress-bar").css("width", "0%");
		if(!Uploader.isActive()) {
			aupload.find("#hide-button").hide();
			aupload.find("#done-button").show();
		}
	},
	isActive: function () {
		var active = $("#upload-files-list li").not(".complete",".cancelled");
		return active.length > 0;
	},
	add: function (e, data) {
		var loader = Uploader;
		loader.reset_status();
		loader.updateBulkFileInfo();
		loader.buildData(data);
		
		var xhr = data.submit();
		data.context.data('data',{jqXHR: xhr});			
	},
	dropped: function(files) {
		var _el = this.inline_status,
			_dest = this.current_folder,
			_upload_list = this.upload_el,
			_completed = this.completed;
		
		// reset metrics and style for inline status
		this.status_reset();
		// add new files to queue
		console.info(this.upload_el);
		$.each(files, function(index) {
			var upload = new Upload(files[index], _dest, _completed.length + index);
			 Uploader.queue.push(upload);
			 Uploader.queue_file_size += upload.file.size;
			upload.add_to(_upload_list);
		});
    	_el.find("a.view-details").html("please wait.");
		_el.find("span.file-desc").html("loading files....");
		_el.find("div.status").html("0 kb/s");
		_el.show();
		$("#notify-wrapper").hide();
		//Uploader.show_upload();
		return true;
	},
	update_bulk_status: function() {
		// file count
		var text = this.queue.length + " File" + (this.queue.length > 1 ? "s" : "");
		this.bulk_status.find("span.num-files").empty().append(text);
		// file size
		this.bulk_status.find("span.size").empty().append(file_size(queue_file_size));
		//time left
		this.buld_status.find("");
	},
	display_files: function(files) {
		
	},
	uploadFinished: function(i, file, response, time) {
		console.info(response);
		Uploader.queue[i].done(response, time);
	},
	show_upload : function (force_show) {
		console.info(!Modal.isVisible());
		if(!Modal.isVisible()) {
		var html = '',
			title = '',
			content ='';
		// fetch title template and populate
		title = { icon: 's_web_upload_32', title: "Upload to '" + Uploader.current_folder + "'"};
		html = $( "#modal_title_tmpl" ).render( title );
		$("#modal-title").empty().append(html);
		var au = $("#advanced-upload-modal");
		au.hide();
		$("div#browse").append(au);
		au = $("#advanced-upload-modal");
		au.show();
		au.find("span.upload-foldername").html(Uploader.current_folder);
		if(au.find("ol#upload-files-list li").length > 0 || force_show) {
			au.find("#upload-desc").hide();
			au.find("ol#upload-files-list").show();
			au.find("div#bulk-upload-status").show();
			au.find("#upload-start-buttons").hide();
			au.find("#upload-running-buttons").show();
		}else{
			au.find("#upload-desc").show();
			au.find("ol#upload-files-list").hide();
			au.find("div#bulk-upload-status").hide();
			au.find("#upload-start-buttons").show();
			au.find("#upload-running-buttons").hide();
		}
		Modal.content(au);
		
		//$("#advanced-upload-modal").show();
		
		this.istat.hide();
		// show modal box
		Modal.show();
		}
	},
	
	reset : function(event) {
		var _status = this.istat;
		_status.find("div.icon img").removeClass("s_web_synced");
		_status.find("div.icon img").addClass("s_web_syncing");
		_status.removeClass("complete");
		_status.find("div.inline-upload-progress").width("0%");
		_status.find("div#bulk-upload-status").width("0%");
		$("#advanced-upload-modal ol#upload-files-list").empty();
		$("#bulk-upload-status").removeClass("complete");
	},
	progressUpdated : function(i, file, progress) {
		Uploader.queue[i].progressUpdate(progress);
		//this.inline_status.find(".inline-upload-progress").width(progress + "%");
		//this.bulk_status.find(".upload-progress-bar").width(progress + "%");
	},
	afterall : function() {
		Uploader.completed = Uploader.completed.concat(Uploader.queue);	
		Uploader.queue = new Array();
	},
	beforeSend: function(i) {
		Uploader.queue[i].beforeSend();
	},
	overall_progress: function(i, file, progress){
		if(file_progress.length > 1){
			current = 0;
			for(idx = 0; idx < i; idx++) {
				current += file_progress[idx].size;
			}
			current += file_progress[i].size * (progress/100);
			return (current/all_file_size*100.00).toFixed(2);
		} else {
			return progress;
		}
}
	
};