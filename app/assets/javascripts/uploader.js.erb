var uploader_config = {
	
	
	
};
var up_config = {
	bulk_status :{
		el         : '#bulk-upload-status',
		elements : {
		'progress' : '.upload-progress-bar',
		'desc'     : '.num-files',
		'size'     : '.size',
		'errors'   : '.num-errors',
		'status'   : '.status',
		'time_left': '.time-left'
		}
	},
	inline_status : {
		el : '#inline-upload-status',
		elements : {'progress': '.inline-upload-progress',
		'icon' 		: '.icon',
		'desc' 		: '.file-desc',
		'errors' 	: '.num-errors',
		'size'    : 'a.view-details',
		'status'  : '.status'}
	}
};

var Uploader = {
	bulk : null,
	inline : null,
	queue: new Array(),
	queue_file_size: 0,
	completed: new Array(),
	current_folder: '',
	upload_el: '',
	istat : null,
	aupload  : null,
	bulk_stat: null,
	init: function() {
		
		this.bulk = new StatusElement(up_config.bulk_status.el);
		this.bulk.init(up_config.bulk_status.elements);
		this.inline = new StatusElement(up_config.inline_status.el);
		this.inline.init(up_config.inline_status.elements);
		
		
		this.istat = $("div#inline-upload-status");
		this.current_folder = $("#current_folder_name").val();
		this.upload_el = $("ol#upload-files-list");
		this.bulk_stat = $("#bulk-upload-status div.bulk-upload-info");
		this.aupload = $("#advanced-upload-modal");
		this.file_info = this.bulk_stat.find("div.files-info");
		this.file_list =  $("#upload-files-list");
		
		// Defaults
		this.file_info.data("count",0);
		this.file_info.data("complete",0);
		this.file_info.data("filesize",0);
	},
	count: function() {
		return this.files.length;
	},
	fileCountText : function() {
		return this.count() + " file" + (( this.count() > 1) ? "s" : "");
	},
	files : function () {
		return this.file_list.find('li');
	},
	completed : function() {
		return this.file_list.find("li.complete").length;
	},
	fileSize : function() {
		return parseInt(this.file_info.data("filesize"));
	},
	reset_status: function() {
		var loader = Uploader;
		loader.inline.reset();
		loader.bulk.reset();
		/*this.istat.find("div.status").html('');
		this.istat.find("a.view-details").html('');
		this.istat.find("span.file-desc").html('');
		this.istat.find("div.icon").empty().append(Sprite.html('web','s_web_syncing', {}));*/
		
		this.aupload.find("#upload-desc").hide();
		this.aupload.find("ol#upload-files-list").show();
		
		this.aupload.find("#upload-start-buttons").hide();
		this.aupload.find("#upload-running-buttons").show();
		
		this.bulk.show();
		
		this.aupload.find("div#bulk-upload-status").removeClass("complete");
		
	},
	updateBulkFileInfo: function() {
		var loader = Uploader;
		var info = loader.file_info;
		var size = 0;
		//var info = $("#bulk-upload-status div.bulk-upload-info div.files-info");
		info.data("count",loader.count());
		info.data("complete",loader.completed());
		//var files = $("#upload-files-list").find("li");
		//var completed = $("#upload-files-list li.complete");
		
		//info.data("count",loader.count());
		//info.data("complete",loader.completed());
		
		loader.files().each(function(index) {
			size += parseInt($(this).data("size"));
		});
		info.data("filesize",size);
		
	},
	buildData: function(data) {
		var loader = Uploader;
		var info = loader.file_info;
		//var i = 0;
		var params = {};
		$.each(data.files, function(index, file)  {
			//i = loader.files(); //$("#upload-files-list").find('li').length;
			// jsRender template
			params = {file: file, 
					  dest: $("#current_folder_name").val(), 
					  index:loader.count(), icon:Sprite.ext_icon(file.name)};
			loader.upload_el.append($("#upload-tmpl").render(params));
			
			data.context = $("#upload-files-list li#upload_" + loader.count());
			data.context.data('IE',file.size);
			data.context.find(".small-x-button").click(loader.cancelHandler);

			//info.data("count", loader.active() + 1);
			info.data("filesize", loader.fileSize() + file.size);
		});
		//var file_size = filesize(loader.fileSize());
		//var file_count = info.data("count") + " file" + ((info.data("count") > 1) ? "s" : "");
		info.find("span.num-files").html(loader.fileCountText());
		info.find("span.size").html( filesize(loader.fileSize()) );
		if(loader.count() > 6) {
			loader.file_list.addClass("scroll");
		}
		loader.istat.find("div.icon").html(Sprite.html('web','s_web_syncing', {}) );
		if(!Modal.isVisible()) {
			loader.istat.show();
		}
	},
	cancelHandler: function (e) {
		var loader = Uploader;
		var parent = $(this).closest("li");
		var info = loader.file_info;
		e.preventDefault();	
		var template = $(e.currentTarget).closest('.template-upload'),
        data = template.data('data') || {};
        if (!data.jqXHR) {
        	data.errorThrown = 'abort';
            this._trigger('fail', e, data);
        } else {
            data.jqXHR.abort();
        }
		info.data("count", loader.count() - 1);
		info.data("filesize", loader.fileSize() -  parseInt(parent.data("size")));
		
		var file_size = filesize(parseInt(info.data("filesize")));
		var file_count = info.data("count") + " file" + ((info.data("count") > 1) ? "s" : "");
		info.find("span.num-files").html(file_count);
		info.find("span.size").html( file_size);
		
		parent.addClass("cancelled");
		parent.find("div.dest-col").html("Cancelled");
		parent.find("div.status-col").empty().append(Sprite.html('web','s_web_cancelsync', {}));
		parent.find("div.upload-progress-bar").css("width", "0%");
		if(!Uploader.isActive()) {
			Uploader.aupload.find("#hide-button").hide();
			Uploader.aupload.find("#done-button").show();
		}
	},
	isActive: function () {
		var active = $("#upload-files-list li").not(".complete",".cancelled");
		return active.length > 0;
	},
	add: function (e, data) {
		var loader = Uploader;
		loader.reset_status();
		loader.updateBulkFileInfo();
		loader.buildData(data);
		
		var xhr = data.submit();
		data.context.data('data',{jqXHR: xhr});			
	},
	send :  function (e, data) {
		var loader = Uploader;
		if(data.context.data('IE')== undefined) {
			
			var upload_info =  $("#bulk-upload-status div.bulk-upload-info");
			var info = $("#bulk-upload-status div.bulk-upload-info div.files-info");
			var inline = $("#inline-upload-status");
			
			var file_info = upload_info.find("div.files-info");
			
			var count = parseInt(file_info.data("count"));
			var completed = parseInt(file_info.data("complete"));
			
			info.find("span.num-files").html(count + " file" + ((count > 1) ? "s" : ""));
			info.find("span.size").html("...please wait");
			$("#bulk-upload-status div.bulk-upload-info div.time-left").empty().append('<img src="/assets/ajax-uploader.gif" />');
			inline.find("span.file-desc").html("Uploading "+ data.files[0].name);
			inline.find("a.view-details").html((count - completed) + " files left");
    		data.context.find(".time-col").append('<img src="/assets/ajax-uploader.gif" />');
			}
		},	
	update_bulk_status: function() {
		// file count
		var text = this.queue.length + " File" + (this.queue.length > 1 ? "s" : "");
		this.bulk_status.find("span.num-files").empty().append(text);
		// file size
		this.bulk_status.find("span.size").empty().append(file_size(queue_file_size));
		//time left
		this.buld_status.find("");
	},
	display_files: function(files) {
		
	},
	uploadFinished: function(i, file, response, time) {
		console.info(response);
		Uploader.queue[i].done(response, time);
	},
	show_upload : function (force_show) {
		console.info(!Modal.isVisible());
		if(!Modal.isVisible()) {
		var html = '',
			title = '',
			content ='';
		// fetch title template and populate
		title = { icon: 's_web_upload_32', title: "Upload to '" + Uploader.current_folder + "'"};
		html = $( "#modal_title_tmpl" ).render( title );
		$("#modal-title").empty().append(html);
		var au = $("#advanced-upload-modal");
		au.hide();
		$("div#browse").append(au);
		au = $("#advanced-upload-modal");
		au.show();
		au.find("span.upload-foldername").html(Uploader.current_folder);
		if(au.find("ol#upload-files-list li").length > 0 || force_show) {
			au.find("#upload-desc").hide();
			au.find("ol#upload-files-list").show();
			au.find("div#bulk-upload-status").show();
			au.find("#upload-start-buttons").hide();
			au.find("#upload-running-buttons").show();
		}else{
			au.find("#upload-desc").show();
			au.find("ol#upload-files-list").hide();
			au.find("div#bulk-upload-status").hide();
			au.find("#upload-start-buttons").show();
			au.find("#upload-running-buttons").hide();
		}
		Modal.content(au);
		
		//$("#advanced-upload-modal").show();
		
		this.istat.hide();
		// show modal box
		Modal.show();
		}
	},
	
	reset : function(event) {
		var _status = this.istat;
		_status.find("div.icon img").removeClass("s_web_synced");
		_status.find("div.icon img").addClass("s_web_syncing");
		_status.removeClass("complete");
		_status.find("div.inline-upload-progress").width("0%");
		_status.find("div#bulk-upload-status").width("0%");
		$("#advanced-upload-modal ol#upload-files-list").empty();
		$("#bulk-upload-status").removeClass("complete");
	},
	progressUpdated : function(i, file, progress) {
		Uploader.queue[i].progressUpdate(progress);
		//this.inline_status.find(".inline-upload-progress").width(progress + "%");
		//this.bulk_status.find(".upload-progress-bar").width(progress + "%");
	},
	afterall : function() {
		Uploader.completed = Uploader.completed.concat(Uploader.queue);	
		Uploader.queue = new Array();
	},
	beforeSend: function(i) {
		Uploader.queue[i].beforeSend();
	},
	overall_progress: function(i, file, progress){
		if(file_progress.length > 1){
			current = 0;
			for(idx = 0; idx < i; idx++) {
				current += file_progress[idx].size;
			}
			current += file_progress[i].size * (progress/100);
			return (current/all_file_size*100.00).toFixed(2);
		} else {
			return progress;
		}
}
	
};